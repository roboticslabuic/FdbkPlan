You are a high-level controller in a simulation environment. The environment is described to you, and you have full knowledge of objects, locations, their actionable properties, and their current state. You also know what actions are feasible in this environment. You will revise a plan provided to you so that it's feasible inside the described environment. You can revise the plan by adding or removing subtasks, or revising the existing subtasks.
IMPORTANT: You MUST NOT use any item that is not listed in all_objects_available list.
IMPORTANT: The format of the generated output MUST be the same as the previous assistant responses provided with no additional text.

Task Description: Make a meal with egg, tomato, and bread.
SubTask 1: Fry the egg in a pan.
SubTask 2: Serve the egg and the tomato on the plate.
needed_objects = ['Egg' ,'Tomato', 'Bread', 'Pan', 'Plate']
properties = {
    'Egg': ['isBroken', 'breakable', 'isSliced', 'sliceable', 'pickupable', 'isPickedUp'], 
    'EggCracked*': ['temperature', 'isCooked', 'cookable', 'pickupable', 'isPickedUp'],
    'Tomato': ['sliceable', 'pickupable', 'isSliced', 'isPickedUp'], 
    'TomatoSliced*': ['pickupable', 'isPickedUp'], 
    'Bread': ['sliceable', 'pickupable', 'isSliced', 'isPickedUp'], 
    'BreadSliced*': ['temperature', 'isCooked', 'cookable', 'pickupable', 'isPickedUp'], 
    'Pan': ['receptacleObjectIds', 'isDirty', 'dirtyable', 'receptacle', 'pickupable', 'isPickedUp'], 
    'Plate': ['receptacleObjectIds', 'isDirty', 'dirtyable', 'isBroken', 'receptacle', 'breakable', 'pickupable', 'isPickedUp']
    }
states = [
    {'objectId': 'Egg|-00.15|+01.01|+03.90', 'parentReceptacles': ['Fridge|-00.44|+00.01|+04.00'], 'isBroken': False, 'breakable': True, 'isSliced': False, 'sliceable': True, 'pickupable': True, 'isPickedUp': False},
    {'objectId': 'Tomato|-02.30|+00.96|+03.80', 'parentReceptacles': ['CounterTop|-03.38|+00.95|+03.34'], 'sliceable': True, 'pickupable': True, 'isSliced': False, 'isPickedUp': False},
    {'objectId': 'Bread|-01.52|+00.96|+00.28', 'parentReceptacles': ['DiningTable|-01.40|+00.01|+00.24'], 'sliceable': True, 'pickupable': True, 'isSliced': False, 'isPickedUp': False},
    {'objectId': 'Pan|-02.61|+00.90|+03.62', 'parentReceptacles': ['CounterTop|-03.38|+00.95|+03.34'], 'receptacleObjectIds': [], 'isDirty': False, 'dirtyable': True, 'receptacle': True, 'pickupable': True, 'isPickedUp': False},
    {'objectId': 'Plate|-03.01|+00.90|+03.68', 'parentReceptacles': ['CounterTop|-03.38|+00.95|+03.34'], 'receptacleObjectIds': [], 'isDirty': True, 'dirtyable': True, 'isBroken': False, 'receptacle': True, 'breakable': True, 'pickupable': True, 'isPickedUp': False}
    ]
context_interactions = [
    {'objectType': 'Egg', 'contextual_interactions': 'Using the Slice action or the Break action will change the Egg to an EggCracked object. Dropping or Throwing the Egg with enough force will also automatically Break the egg into an EggCracked.'},
    {'objectType': 'Tomato', 'contextual_interactions': 'When Sliced, will create multiple TomatoSliced objects.'},
    {'objectType': 'Pan', 'contextual_interactions': 'If in the Dirty state, will automatically become Clean if moved under running water.'},
    {'objectType': 'Plate', 'contextual_interactions': 'Will automatically break if subjected to enough force. Not all Plates are breakable (Plastic-Unbreakable vs Glass-Breakable vs Ceramic-Breakable). If in the Dirty state, will automatically become Clean if moved under running water.'}
    ]
all_objects_available = [
                        'Apple', 'Bowl', 'Bread', 'ButterKnife', 'Cabinet', 'CounterTop', 'Cup',
                        'DiningTable', 'DishSponge', 'Drawer', 'Egg', 'Faucet', 'Floor', 'Fork', 'Fridge', 'GarbageBag', 'GarbageCan', 'Kettle', 'Knife', 'Lettuce', 'LightSwitch', 'Microwave', 'Plate', 'Pot', 'Sink', 'SinkBasin', 'SoapBottle', 'Spatula', 'Spoon', 'Stool', 'StoveBurner', 'Tomato'
                        ]
IMPORTANT: Some objects are created from a source object after certain actions. For example, PotatoSliced objects are generated after a Potato object has had the Slice action used on it. Object Types that have a (*) next to them are only referenced after an interaction. For instance, Apple becomes AppleSliced once the Slice action has been applied to the Apple. Objects with a (*) in the properties dictionary don't exist in the scene but could exist after performing actions on objects existing in the scene.

Task Description: Make a meal with egg, tomato, and bread.
SubTask 1: Break the egg in the pan and fry it on the stove.
SubTask 2: Slice the bread and the tomato.
SubTask 3: Wash the plate in the Sink or SinkBasin.
SubTask 4: Serve the egg and the tomato on the plate.
needed_objects = ['Egg' , 'EggCracked', 'Tomato', 'TomatoSliced', 'Bread', 'BreadSliced', 'Knife', 'Pan', 'Plate', 'StoveBurner', 'Sink']